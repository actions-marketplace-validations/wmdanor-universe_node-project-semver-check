name: 'Checks'

on:
  pull_request:
    branches: [ "main" ]

jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - uses: ./packages/node-project-semver-check
        name: Get version info
        id: checkVersion
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          package-json-path: 'packages/node-project-semver-check/package.json'
      
      - name: Check version
        run: |
          if [[ steps.checkVersion.outputs.isValid != false ]]; then
            echo "Version is not valid"
            echo "thisBranchInitialVersion ${{ steps.checkVersion.outputs['thisBranchInitialVersion.value'] }}"
            echo "thisBranchCurrentVersion ${{ steps.checkVersion.outputs['thisBranchCurrentVersion.value'] }}"
            echo "mainBranchCurrentVersion ${{ steps.checkVersion.outputs['mainBranchCurrentVersion.value'] }}"
            echo "hasChanged ${{ steps.checkVersion.outputs.hasChanged }}"
            echo "isValid ${{ steps.checkVersion.outputs.isValid }}"
            exit 1
          fi

      - name: Run typecheck
        run: pnpm run typecheck 
      
      - name: Run lint
        run: pnpm run lint

      - name: Run tests
        run: pnpm run test
